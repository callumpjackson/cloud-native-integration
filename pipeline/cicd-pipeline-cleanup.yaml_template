apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: infinite-cleanup-pipeline
  namespace: {{NAMESPACE}}
spec:
  params:
    - name: imageTag
      type: string
      description: The image tag
  workspaces:
    - name: git-source
  tasks:
    - name: clone-git-source
      retries: 2
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: "{{REPO}}"
        - name: subdirectory
          value: ""
        - name: deleteExisting
          value: "true"
        - name: revision
          value: "{{BRANCH}}"
      workspaces:
        - name: output
          workspace: git-source

    # Clean-up IBM MQ
    - name: clean-up-mq
      retries: 2
      runAfter:
        - clone-git-source
      taskRef:
        name: run-script
      params:
        - name: script
          value: "mq/uniformcluster/deploy/cleanup.sh"
        - name: params
          value: " {{NAMESPACE}}"
      workspaces:
        - name: git-source
          workspace: git-source

    # Clean-up ACE config
    - name: clean-up-ace
      retries: 2
      runAfter:
        - clone-git-source
      taskRef:
        name: run-script
      params:
        - name: script
          value: "ace/cleanup.sh"
        - name: params
          value: " {{NAMESPACE}}"
      workspaces:
        - name: git-source
          workspace: git-source
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: infinite-cleanup-pipeline-triggertemplate
  namespace: {{NAMESPACE}}
spec:
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: infinite-cleanup-pipelinerun-$(uid)
      spec:
        pipelineRef:
          name: infinite-cleanup-pipeline
        serviceAccountName: pipeline
        workspaces:
          - name: git-source
            persistentvolumeclaim:
              claimName: git-source-workspace
        params:
          - name: imageTag
            value: $(uid)
        timeout: "20m"
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: infinite-cleanup-pipeline-event-listener
  namespace: {{NAMESPACE}}
spec:
  serviceAccountName: pipeline
  triggers:
    - template:
        ref: infinite-cleanup-pipeline-triggertemplate
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/managed-by: EventListener
    app.kubernetes.io/part-of: Triggers
    eventlistener: infinite-cleanup-pipeline-event-listener
  name: el-infinite-cleanup-pipeline-trigger-route
  namespace: {{NAMESPACE}}
spec:
  host: ""
  port:
    targetPort: http-listener
  to:
    kind: Service
    name: el-infinite-cleanup-pipeline-event-listener
    weight: null
